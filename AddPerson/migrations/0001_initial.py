# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-03-07 03:04
from __future__ import unicode_literals

import datetime
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AddmissionsService',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addmissions_service', models.CharField(blank=True, choices=[(b'N', b'None'), (b'1', b'package1'), (b'2', b'package2'), (b'3', b'package3')], db_index=True, default=b'N', max_length=20, null=True)),
                ('start_date', models.DateField(blank=True, db_index=True, default=datetime.datetime.now, null=True)),
                ('end_date', models.DateField(blank=True, db_index=True, default=datetime.datetime.now, null=True)),
                ('entry_round', models.IntegerField(blank=True, default=1, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('application_type', models.CharField(blank=True, max_length=50, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=10, null=True)),
                ('city', models.CharField(blank=True, max_length=50, null=True)),
                ('state', models.CharField(blank=True, max_length=50, null=True)),
                ('country', models.CharField(blank=True, max_length=50, null=True)),
                ('other_countries', models.CharField(blank=True, max_length=100, null=True)),
                ('leadership', models.CharField(blank=True, max_length=50, null=True)),
                ('diversity', models.NullBooleanField()),
                ('years_experience', models.IntegerField(blank=True, null=True)),
                ('industry', models.CharField(blank=True, max_length=50, null=True)),
                ('titles', models.CharField(blank=True, max_length=100, null=True)),
                ('postgrad_career_options', models.CharField(blank=True, max_length=100, null=True)),
                ('undergrad', models.CharField(blank=True, max_length=100, null=True)),
                ('major', models.CharField(blank=True, max_length=100, null=True)),
                ('gpa', models.FloatField(blank=True, null=True)),
                ('major_gpa', models.FloatField(blank=True, null=True)),
                ('leadership_roles', models.CharField(blank=True, max_length=100, null=True)),
                ('advanced_degrees', models.CharField(blank=True, max_length=100, null=True)),
                ('grad_school', models.CharField(blank=True, max_length=100, null=True)),
                ('gmats', models.IntegerField(blank=True, null=True)),
                ('gmat_score', models.IntegerField(blank=True, null=True)),
                ('gmat_total_percentile', models.FloatField(blank=True, null=True)),
                ('gmat_verbal_percentile', models.FloatField(blank=True, null=True)),
                ('gmat_quant_percentile', models.FloatField(blank=True, null=True)),
                ('gmat_awa', models.FloatField(blank=True, null=True)),
                ('gres', models.IntegerField(blank=True, null=True)),
                ('gre_total', models.IntegerField(blank=True, null=True)),
                ('gre_verbal_percentile', models.FloatField(blank=True, null=True)),
                ('gre_quant_percentile', models.FloatField(blank=True, null=True)),
                ('gre_awa', models.FloatField(blank=True, null=True)),
                ('lsat_score', models.IntegerField(blank=True, null=True)),
                ('lsat_percentile', models.FloatField(blank=True, null=True)),
                ('target_schools', models.CharField(blank=True, max_length=100, null=True)),
                ('programs', models.CharField(blank=True, max_length=100, null=True)),
                ('program_type', models.CharField(blank=True, max_length=100, null=True)),
                ('schools', models.CharField(blank=True, max_length=100, null=True)),
                ('submit_time', models.CharField(blank=True, max_length=100, null=True)),
                ('class_start_time', models.CharField(blank=True, max_length=100, null=True)),
                ('previously_applied', models.NullBooleanField()),
                ('resume', models.CharField(blank=True, max_length=5000, null=True)),
                ('how_heard', models.CharField(blank=True, max_length=100, null=True)),
                ('additional_info', models.CharField(blank=True, max_length=200, null=True)),
                ('comments', models.CharField(blank=True, max_length=1000, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Consultant',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment', models.IntegerField(blank=True, default=0, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('consultant_specialty', models.CharField(blank=True, choices=[(b'N', b'None'), (b'1', b'specialty1'), (b'2', b'specialty2'), (b'3', b'specialty3')], default=b'N', max_length=50, null=True)),
                ('consultant_address', models.CharField(blank=True, max_length=200, null=True)),
                ('round_one_capacity', models.IntegerField(blank=True, default=0, null=True)),
                ('round_two_capacity', models.IntegerField(blank=True, default=0, null=True)),
                ('hourly_capability', models.NullBooleanField(default=False)),
                ('comments', models.CharField(blank=True, max_length=1000, null=True)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('alternate_email', models.CharField(blank=True, max_length=100, null=True)),
                ('day_phone', models.CharField(blank=True, max_length=10, null=True)),
                ('evening_phone', models.CharField(blank=True, max_length=10, null=True)),
                ('text_phone', models.CharField(blank=True, max_length=10, null=True)),
                ('skype', models.CharField(blank=True, max_length=20, null=True)),
                ('clients', models.ManyToManyField(blank=True, through='AddPerson.AddmissionsService', to='AddPerson.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Editor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment', models.IntegerField(blank=True, default=0, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Provider',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment', models.IntegerField(blank=True, default=0, null=True)),
                ('first_name', models.CharField(blank=True, max_length=100, null=True)),
                ('last_name', models.CharField(blank=True, max_length=100, null=True)),
                ('provider_specialty', models.CharField(blank=True, choices=[(b'N', b'None'), (b'1', b'specialty1'), (b'2', b'specialty2'), (b'3', b'specialty3')], default=b'N', max_length=50, null=True)),
                ('provider_address', models.CharField(blank=True, max_length=200, null=True)),
                ('round_one_capacity', models.IntegerField(blank=True, default=0, null=True)),
                ('round_two_capacity', models.IntegerField(blank=True, default=0, null=True)),
                ('hourly_capability', models.NullBooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='School',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service', models.CharField(blank=True, choices=[(b'N', b'None'), (b'1', b'package1'), (b'2', b'package2'), (b'3', b'package3')], db_index=True, default=b'N', max_length=20, null=True)),
                ('start_date', models.DateField(blank=True, db_index=True, default=datetime.datetime.now, null=True)),
                ('end_date', models.DateField(blank=True, db_index=True, default=datetime.datetime.now, null=True)),
                ('entry_round', models.IntegerField(blank=True, default=1, null=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='AddPerson.Client')),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='AddPerson.Provider')),
            ],
        ),
        migrations.AddField(
            model_name='provider',
            name='clients',
            field=models.ManyToManyField(blank=True, through='AddPerson.Service', to='AddPerson.Client'),
        ),
        migrations.AddField(
            model_name='consultant',
            name='editor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='AddPerson.Editor'),
        ),
        migrations.AddField(
            model_name='addmissionsservice',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='AddPerson.Client'),
        ),
        migrations.AddField(
            model_name='addmissionsservice',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='AddPerson.Consultant'),
        ),
        migrations.AddField(
            model_name='addmissionsservice',
            name='schools',
            field=models.ManyToManyField(to='AddPerson.School'),
        ),
    ]
